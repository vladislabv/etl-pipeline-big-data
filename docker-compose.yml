version: '3'

networks:
  mqtt_network:
    driver: bridge

services:

  mosquitto:
    build:
      context: .
      dockerfile_inline: |
       FROM eclipse-mosquitto:latest
       COPY ./docker/preload/mosquitto/mosquitto.conf /mosquitto/config/mosquitto.conf
    container_name: mosquitto
    ports:
      - "1883:1883"
    networks:
      - mqtt_network
      
  db:
    image: mongo:latest
    container_name: db
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$DOCKER_MONGO_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$DOCKER_MONGO_PASSWORD
    volumes:
      - ./docker/mnt/mongodb:/data/db
    networks:
      - mqtt_network

  node-red:
    build:
      context: .
      dockerfile_inline: |
       FROM nodered/node-red:latest
       RUN npm i node-red-node-mongodb node-red-contrib-loop node-red-debugger node-red-contrib-increment node-red-contrib-key-value-store
       COPY ./docker/preload/node-red/settings.js /data/settings.js
       COPY ./docker/preload/node-red/flows.js /data/flows.js
    container_name: node-red
    depends_on:
      - mosquitto
    ports:
      - "1880:1880"
    volumes:
      - ./docker/mnt/node-red:/data
    networks:
      - mqtt_network

  ruuvi-tags:
    image: ghcr.io/systematiccaos/ruuvi-simulator/sim:master 
    container_name: rest-api
    depends_on:
       - node-red
    ports:
       - "8080:8080"
    networks:
       - mqtt_network

  python-listener:
    build:
      context: .
      dockerfile_inline: |
       FROM python:3.11-slim-bookworm
       COPY ./docker/preload/mongodb/ /var/data/mongodb/
       RUN pip install aiomqtt aiofiles motor
       WORKDIR /var/scripts/python
       CMD ["python", "listener.py"]
    container_name: python-listener
    depends_on:
      - db
      - mosquitto
    environment:
      - MONGO_URI=mongodb://$DOCKER_MONGO_USERNAME:$DOCKER_MONGO_PASSWORD@db:$MONGO_PORT/
      - MQTT_BROKER_HOST=$MQTT_BROKER_HOST
      - MQTT_BROKER_PORT=$MQTT_BROKER_PORT
    volumes:
      - ./docker/mnt/python-listener:/var/scripts/python
    networks:
      - mqtt_network
  
  mongo-express:
    image: mongo-express
    container_name: db-express
    restart: unless-stopped
    environment:
      - ME_CONFIG_OPTIONS_EDITORTHEME=ambiance
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_MONGODB_URL=mongodb://$DOCKER_MONGO_USERNAME:$DOCKER_MONGO_PASSWORD@db:$MONGO_PORT
    depends_on:
      - db
    ports:
      - "8081:8081"
    networks:
      - mqtt_network
    
  
      
